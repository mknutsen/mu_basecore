##
# Generates the DSC based on a particular JSON file
#TODO move into DSCObject?
##
import logging
import os, sys
import json
from DscObject import Dsc
import PluginManager


class JsonDscGenerator(PluginManager.IUefiHelperPlugin):

    def RegisterHelpers(self, obj):
      fp = os.path.abspath(__file__)
      obj.Register("generate_dsc_from_json", JsonDscGenerator.generate_dsc_from_json, fp)

    @staticmethod
    def generate_dsc_from_json(jsonFile,outputFile):
        logging.info("Loading the JSON file %s", jsonFile)
        #strip out the comments
        with open(jsonFile, 'r') as f:
            lines = f.readlines()
            out = ""
            for a in lines:
                a = a.partition("//")[0]
                a = a.rstrip()
                out += a
            jsonData = json.loads(out)
        # create a dsc
        _dsc = Dsc()
        
        #turn the JSON data into the DSC
        for key in jsonData:
            matchkey = key.lower().strip()
            if matchkey == "defines":
                for defineKey in jsonData[key]:
                    value = jsonData[key][defineKey]
                    logging.info("Defines %s", jsonData[key][defineKey])
                    _dsc.UpdateOrCreateValue("Defines",defineKey,value,jsonFile)
        
        # walk the directory looking for infs
        infDir = os.path.dirname(jsonFile)

        removeLength = len(os.path.dirname(os.path.dirname(jsonFile))) + 1
        for Root, _, Files in os.walk(infDir):
            for File in Files:
                if File.lower().endswith('.inf'):
                    #TODO read inf
                    
                    key = os.path.join(Root, File)[removeLength:]
                    value = ""

                    _dsc.UpdateOrCreateValue("Components.X64", key, None, "Generated from walking tree")
    
        ## writes the output file
        logging.critical("Generating the temp dsc file %s" % outputFile)
        with open(outputFile, 'w') as f:  
            f.write("# Autogenerated\n")
            #TODO: generate hash code of MD5's so we can determine if we need to rewrite this? But then we already generated it?
            #TODO: how do we invalidate the previous temp.dsc?
            _dsc.Write(f)