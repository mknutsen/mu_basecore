/**
Protocol to describe pre-hashed platform FW blobs.

Copyright (c) 2019, Microsoft Corporation

All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
 and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

**/

#ifndef __PLATFORM_FIRMWARE_BLOB_PREHASH_H__
#define __PLATFORM_FIRMWARE_BLOB_PREHASH_H__

#define PLATFORM_FIRMWARE_BLOB_PREHASH_PROTOCOL_GUID \
 { 0x2B769EE0, 0x3381, 0x4E9C, { 0xBB, 0x21, 0x39, 0x58, 0x1A, 0xC6, 0xD6, 0x23 } }

//
// HashAlgoId is TPM_ALG_ID in Tpm20.h
//
typedef struct {
  UINT16                                     HashAlgoId;
  UINT16                                     HashSize;
  //UINT8                                    Hash[];
} PLATFORM_FIRMWARE_BLOB_HASH_INFO;

//
// This protocol carries prehashsed data for one platform firmware blob. Platform should
// ensure 1:1 mapping between pre-hashed protocol and corresponding firmware blob.
// The Count field in the protocol is followed by Count number of platform firmware blob
// hash info entries, which can be extended to PCR and logged to TCG event log directly
// by TCG modules.
// TCG module checks TPM required hash algorithms(PcdTpm2HashMask) with each pre-hashed
// protocol:
//   For each pre-hashed protocol
//     If protocol carries hash generated by equivalent or larger algorithm set than
//     TPM required, directly use protocol data, else, drop protocol data and calculate
//     the hashes again.
//
typedef struct {
  UINT32                                     FwBlobBase;
  UINT32                                     FwBlobLength;
  UINT32                                     Count;
  //PLATFORM_FIRMWARE_BLOB_HASH_INFO         HashInfo[];
} PLATFORM_FIRMWARE_BLOB_PREHASH_PROTOCOL;

extern EFI_GUID gPlatformFirmwareBlobPrehashProtocolGuid;

#endif // __PLATFORM_FIRMWARE_BLOB_PREHASH_H__
